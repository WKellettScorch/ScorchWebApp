{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";//.\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\nexport var getCustomerAddressesByClientID=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(clientID){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:3000/api/customers/address/\".concat(clientID));case 3:response=_context.sent;if(response.ok){_context.next=7;break;}console.error('API response not OK:',response.status,response.statusText);throw new Error('Failed to fetch customer addresses');case 7:_context.next=9;return response.json();case 9:return _context.abrupt(\"return\",_context.sent);case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);console.error('Error fetching customer addresses:',_context.t0);throw _context.t0;case 16:case\"end\":return _context.stop();}},_callee,null,[[0,12]]);}));return function getCustomerAddressesByClientID(_x){return _ref.apply(this,arguments);};}();export var searchCustomersByFields=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(clientID,name,email,address){var url,params,response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:url=new URL('http://localhost:3000/api/customers/search');params={clientID:clientID,name:name,email:email,address:address};url.search=new URLSearchParams(params).toString();_context2.prev=3;_context2.next=6;return fetch(url);case 6:response=_context2.sent;if(response.ok){_context2.next=10;break;}console.error('API response not OK:',response.status,response.statusText);throw new Error('Failed to fetch customers');case 10:_context2.next=12;return response.json();case 12:data=_context2.sent;console.log('Fetched data:',data);return _context2.abrupt(\"return\",data);case 17:_context2.prev=17;_context2.t0=_context2[\"catch\"](3);console.error('Error fetching customers:',_context2.t0);throw _context2.t0;case 21:case\"end\":return _context2.stop();}},_callee2,null,[[3,17]]);}));return function searchCustomersByFields(_x2,_x3,_x4,_x5){return _ref2.apply(this,arguments);};}();// .\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\nexport var addCustomer=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(customerData){var response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch('http://localhost:3000/api/customers/add',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(customerData)});case 3:response=_context3.sent;if(response.ok){_context3.next=7;break;}console.error('API response not OK:',response.status,response.statusText);throw new Error('Failed to add customer');case 7:_context3.next=9;return response.json();case 9:return _context3.abrupt(\"return\",_context3.sent);case 12:_context3.prev=12;_context3.t0=_context3[\"catch\"](0);console.error('Error adding customer:',_context3.t0);throw _context3.t0;case 16:case\"end\":return _context3.stop();}},_callee3,null,[[0,12]]);}));return function addCustomer(_x6){return _ref3.apply(this,arguments);};}();export var editCustomer=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(customerData){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;console.log(customerData);_context4.next=4;return fetch('http://localhost:3000/api/customers/update',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(customerData)});case 4:response=_context4.sent;if(response.ok){_context4.next=8;break;}console.error('API response not OK:',response.status,response.statusText);throw new Error('Failed to add customer');case 8:_context4.next=10;return response.json();case 10:return _context4.abrupt(\"return\",_context4.sent);case 13:_context4.prev=13;_context4.t0=_context4[\"catch\"](0);console.error('Error updating customer:',_context4.t0);throw _context4.t0;case 17:case\"end\":return _context4.stop();}},_callee4,null,[[0,13]]);}));return function editCustomer(_x7){return _ref4.apply(this,arguments);};}();","map":{"version":3,"names":["getCustomerAddressesByClientID","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","clientID","response","wrap","_callee$","_context","prev","next","fetch","concat","sent","ok","console","error","status","statusText","Error","json","abrupt","t0","stop","_x","apply","arguments","searchCustomersByFields","_ref2","_callee2","name","email","address","url","params","data","_callee2$","_context2","URL","search","URLSearchParams","toString","log","_x2","_x3","_x4","_x5","addCustomer","_ref3","_callee3","customerData","_callee3$","_context3","method","headers","body","JSON","stringify","_x6","editCustomer","_ref4","_callee4","_callee4$","_context4","_x7"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/api/CustomerAPI.js"],"sourcesContent":["//.\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\r\n\r\nexport const getCustomerAddressesByClientID = async (clientID) => {\r\n    try {\r\n        const response = await fetch(`http://localhost:3000/api/customers/address/${clientID}`);\r\n        if (!response.ok) {\r\n            console.error('API response not OK:', response.status, response.statusText);\r\n            throw new Error('Failed to fetch customer addresses');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error fetching customer addresses:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\nexport const searchCustomersByFields = async (clientID, name, email, address) => {\r\n    const url = new URL('http://localhost:3000/api/customers/search');\r\n    const params = { clientID, name, email, address }; \r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            console.error('API response not OK:', response.status, response.statusText);\r\n            throw new Error('Failed to fetch customers');\r\n        }\r\n        const data = await response.json();\r\n        console.log('Fetched data:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error fetching customers:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\n// .\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\r\n\r\nexport const addCustomer = async (customerData) => {\r\n    try {\r\n        const response = await fetch('http://localhost:3000/api/customers/add', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(customerData)\r\n        });\r\n        if (!response.ok) {\r\n            console.error('API response not OK:', response.status, response.statusText);\r\n            throw new Error('Failed to add customer');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error adding customer:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const editCustomer = async (customerData) => {\r\n    try {\r\n        console.log(customerData)\r\n        const response = await fetch('http://localhost:3000/api/customers/update', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(customerData)\r\n        });\r\n        if (!response.ok) {\r\n            console.error('API response not OK:', response.status, response.statusText);\r\n            throw new Error('Failed to add customer');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error updating customer:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}