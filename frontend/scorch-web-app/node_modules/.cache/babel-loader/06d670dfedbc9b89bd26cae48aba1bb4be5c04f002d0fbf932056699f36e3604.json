{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\Documents\\\\Scorch\\\\EnterpriseSites\\\\Scorch\\\\scorch-web-app\\\\frontend\\\\scorch-web-app\\\\src\\\\components\\\\Customers\\\\CustomersView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Import components\nimport Header from './Header/Header';\nimport AddCustomerButton from './Header/AddCustomerButton';\nimport SearchAndFilterSection from './SearchAndFilterSection/SearchAndFilterSection';\nimport SearchBar from './SearchAndFilterSection/SearchBar';\n//import FilterDropdown from './SearchAndFilterSection/FilterDropdown';\nimport SortDropdown from './SearchAndFilterSection/SortDropdown';\nimport ListView from './ListView/ListView';\nimport CustomerListItem from './ListView/CustomerListItem';\nimport DetailsPanel from './DetailsPanel/DetailsPanel';\nimport RelatedJobsButton from './DetailsPanel/RelatedJobsButton';\nimport EditInfoButton from './DetailsPanel/EditInfoButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomersView = () => {\n  _s();\n  // A state to store all customers\n  const [customers, setCustomers] = useState([]);\n\n  // A state to store filtered or sorted customers\n  const [displayedCustomers, setDisplayedCustomers] = useState([]);\n\n  // A state to store selected customer details for the details panel\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n  // This would fetch customers from API or any other source.\n  // I've used useEffect for demonstration but you'll integrate it with your actual API calls or data fetching mechanism.\n  useEffect(() => {\n    // Fetch customers from API or any other source\n    // and set the fetched data to 'customers' state\n    // For demonstration, let's assume we fetch the below data\n    const fetchedCustomers = [\n      // example customer data\n    ];\n    setCustomers(fetchedCustomers);\n    setDisplayedCustomers(fetchedCustomers);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customers-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(AddCustomerButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchAndFilterSection, {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: query => {\n          // handle search logic here\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SortDropdown, {\n        onSort: criteria => {\n          // handle sort logic here\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListView, {\n      children: displayedCustomers.map(customer => /*#__PURE__*/_jsxDEV(CustomerListItem, {\n        customer: customer,\n        onClick: () => setSelectedCustomer(customer)\n      }, customer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), selectedCustomer && /*#__PURE__*/_jsxDEV(DetailsPanel, {\n      customer: selectedCustomer,\n      children: [/*#__PURE__*/_jsxDEV(RelatedJobsButton, {\n        customerId: selectedCustomer.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(EditInfoButton, {\n        customerId: selectedCustomer.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomersView, \"vGD5iL9erGKd78QrGJsXvE2ylvQ=\");\n_c = CustomersView;\nexport default CustomersView;\nvar _c;\n$RefreshReg$(_c, \"CustomersView\");","map":{"version":3,"names":["React","useState","useEffect","Header","AddCustomerButton","SearchAndFilterSection","SearchBar","SortDropdown","ListView","CustomerListItem","DetailsPanel","RelatedJobsButton","EditInfoButton","jsxDEV","_jsxDEV","CustomersView","_s","customers","setCustomers","displayedCustomers","setDisplayedCustomers","selectedCustomer","setSelectedCustomer","fetchedCustomers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","query","onSort","criteria","map","customer","onClick","id","customerId","_c","$RefreshReg$"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/components/Customers/CustomersView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Import components\r\nimport Header from './Header/Header';\r\nimport AddCustomerButton from './Header/AddCustomerButton';\r\nimport SearchAndFilterSection from './SearchAndFilterSection/SearchAndFilterSection';\r\nimport SearchBar from './SearchAndFilterSection/SearchBar';\r\n//import FilterDropdown from './SearchAndFilterSection/FilterDropdown';\r\nimport SortDropdown from './SearchAndFilterSection/SortDropdown';\r\nimport ListView from './ListView/ListView';\r\nimport CustomerListItem from './ListView/CustomerListItem';\r\nimport DetailsPanel from './DetailsPanel/DetailsPanel';\r\nimport RelatedJobsButton from './DetailsPanel/RelatedJobsButton';\r\nimport EditInfoButton from './DetailsPanel/EditInfoButton';\r\n\r\nconst CustomersView = () => {\r\n    // A state to store all customers\r\n    const [customers, setCustomers] = useState([]);\r\n    \r\n    // A state to store filtered or sorted customers\r\n    const [displayedCustomers, setDisplayedCustomers] = useState([]);\r\n\r\n    // A state to store selected customer details for the details panel\r\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n\r\n    // This would fetch customers from API or any other source.\r\n    // I've used useEffect for demonstration but you'll integrate it with your actual API calls or data fetching mechanism.\r\n    useEffect(() => {\r\n        // Fetch customers from API or any other source\r\n        // and set the fetched data to 'customers' state\r\n        // For demonstration, let's assume we fetch the below data\r\n        const fetchedCustomers = [\r\n            // example customer data\r\n        ];\r\n        setCustomers(fetchedCustomers);\r\n        setDisplayedCustomers(fetchedCustomers);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"customers-view-container\">\r\n            <Header>\r\n                <AddCustomerButton />\r\n            </Header>\r\n            <SearchAndFilterSection>\r\n                <SearchBar \r\n                    onSearch={(query) => {\r\n                        // handle search logic here\r\n                    }} \r\n                />\r\n                <SortDropdown \r\n                    onSort={(criteria) => {\r\n                        // handle sort logic here\r\n                    }} \r\n                />\r\n            </SearchAndFilterSection>\r\n            <ListView>\r\n                {displayedCustomers.map(customer => (\r\n                    <CustomerListItem \r\n                        key={customer.id}\r\n                        customer={customer}\r\n                        onClick={() => setSelectedCustomer(customer)}\r\n                    />\r\n                ))}\r\n            </ListView>\r\n            {selectedCustomer && \r\n                <DetailsPanel customer={selectedCustomer}>\r\n                    <RelatedJobsButton customerId={selectedCustomer.id} />\r\n                    <EditInfoButton customerId={selectedCustomer.id} />\r\n                </DetailsPanel>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomersView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}