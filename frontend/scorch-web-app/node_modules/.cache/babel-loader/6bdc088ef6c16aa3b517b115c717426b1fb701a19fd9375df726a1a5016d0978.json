{"ast":null,"code":"import _defineProperty from\"C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'./EditCustomerForm.css';import{editCustomer}from'../../../api/CustomerAPI';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditCustomerForm=function EditCustomerForm(_ref){var onClose=_ref.onClose,customer=_ref.customer;var _useState=useState(customer),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var handleInputChange=function handleInputChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setFormData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},name,value));});};var handleSubmit=function handleSubmit(event){event.preventDefault();// Here, you'll make the API call to update the customer data instead of adding a new one.\n// Make sure to modify accordingly.\neditCustomer(formData).then(function(response){alert(response.message);// Show success message\nonClose();}).catch(function(error){alert('Failed to edit customer. Please try again.');});};return/*#__PURE__*/_jsx(\"div\",{className:\"edit-customer-form-overlay\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"add-customer-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"FirstName\",placeholder:\"First Name\",value:formData.FirstName,onChange:handleInputChange,required:true,pattern:\"[a-zA-Z\\\\s]+\",title:\"Only alphabetic characters are allowed\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"LastName\",placeholder:\"Last Name\",value:formData.LastName,onChange:handleInputChange,required:true,pattern:\"[a-zA-Z\\\\s]+\",title:\"Only alphabetic characters are allowed\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"Email\",placeholder:\"Email\",value:formData.Email,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"Phone\",placeholder:\"Phone Number\",value:formData.Phone,onChange:handleInputChange,required:true,pattern:\"[\\\\(]?(\\\\d{3})[\\\\)]?[\\\\s-]?(\\\\d{3})[\\\\s-]?(\\\\d{4})\",title:\"Please enter a valid phone number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"StreetAddress\",placeholder:\"Street Address\",value:formData.StreetAddress,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"City\",placeholder:\"City\",value:formData.City,onChange:handleInputChange,required:true,pattern:\"[a-zA-Z\\\\s]+\",title:\"Only alphabetic characters are allowed\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"State\",placeholder:\"State\",value:formData.State,onChange:handleInputChange,required:true,pattern:\"[a-zA-Z\\\\s]+\",title:\"Only alphabetic characters are allowed\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"ZipCode\",placeholder:\"Zip Code\",value:formData.ZipCode,onChange:handleInputChange,required:true,pattern:\"^\\\\d{5}(?:[-\\\\s]\\\\d{4})?$\",title:\"Valid formats: 12345 or 12345-6789\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,children:\"Close\"})]})});};export default EditCustomerForm;","map":{"version":3,"names":["React","useState","editCustomer","jsx","_jsx","jsxs","_jsxs","EditCustomerForm","_ref","onClose","customer","_useState","_useState2","_slicedToArray","formData","setFormData","handleInputChange","event","_event$target","target","name","value","prevState","_objectSpread","_defineProperty","handleSubmit","preventDefault","then","response","alert","message","catch","error","className","children","onSubmit","type","placeholder","FirstName","onChange","required","pattern","title","LastName","Email","Phone","StreetAddress","City","State","ZipCode","onClick"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/components/Customers/Header/EditCustomerForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './EditCustomerForm.css';\r\nimport { editCustomer } from '../../../api/CustomerAPI';\r\n\r\nconst EditCustomerForm = ({ onClose, customer }) => {\r\n    const [formData, setFormData] = useState(customer);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // Here, you'll make the API call to update the customer data instead of adding a new one.\r\n        // Make sure to modify accordingly.\r\n        editCustomer(formData)\r\n        .then(response => {\r\n            alert(response.message);  // Show success message\r\n            onClose();\r\n        })\r\n        .catch(error => {\r\n            alert('Failed to edit customer. Please try again.');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"edit-customer-form-overlay\">\r\n            <form onSubmit={handleSubmit} className=\"add-customer-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"FirstName\"\r\n                    placeholder=\"First Name\"\r\n                    value={formData.FirstName}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[a-zA-Z\\s]+\"\r\n                    title=\"Only alphabetic characters are allowed\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"LastName\"\r\n                    placeholder=\"Last Name\"\r\n                    value={formData.LastName}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[a-zA-Z\\s]+\"\r\n                    title=\"Only alphabetic characters are allowed\"\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"Email\"\r\n                    placeholder=\"Email\"\r\n                    value={formData.Email}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"Phone\"\r\n                    placeholder=\"Phone Number\"\r\n                    value={formData.Phone}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[\\(]?(\\d{3})[\\)]?[\\s-]?(\\d{3})[\\s-]?(\\d{4})\"\r\n                    title=\"Please enter a valid phone number\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"StreetAddress\"\r\n                    placeholder=\"Street Address\"\r\n                    value={formData.StreetAddress}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"City\"\r\n                    placeholder=\"City\"\r\n                    value={formData.City}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[a-zA-Z\\s]+\"\r\n                    title=\"Only alphabetic characters are allowed\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"State\"\r\n                    placeholder=\"State\"\r\n                    value={formData.State}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[a-zA-Z\\s]+\"\r\n                    title=\"Only alphabetic characters are allowed\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"ZipCode\"\r\n                    placeholder=\"Zip Code\"\r\n                    value={formData.ZipCode}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"^\\d{5}(?:[-\\s]\\d{4})?$\"\r\n                    title=\"Valid formats: 12345 or 12345-6789\"\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n                <button onClick={onClose}>Close</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditCustomerForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}