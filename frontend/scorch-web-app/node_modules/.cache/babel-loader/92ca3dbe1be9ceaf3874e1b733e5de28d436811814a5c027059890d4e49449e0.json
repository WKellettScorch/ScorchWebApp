{"ast":null,"code":"//.\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\n\nexport const getCustomerAddressesByClientID = async clientID => {\n  try {\n    const response = await fetch(`http://localhost:3000/api/customers/address/${clientID}`);\n    if (!response.ok) {\n      console.error('API response not OK:', response.status, response.statusText);\n      throw new Error('Failed to fetch customer addresses');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching customer addresses:', error);\n    throw error;\n  }\n};\nexport const searchCustomersByFields = async (clientID, name, email, address) => {\n  const url = new URL('http://localhost:3000/api/customers/search');\n  const params = {\n    clientID,\n    name,\n    email,\n    address\n  };\n  url.search = new URLSearchParams(params).toString();\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error('API response not OK:', response.status, response.statusText);\n      throw new Error('Failed to fetch customers');\n    }\n    const data = await response.json();\n    console.log('Fetched data:', data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching customers:', error);\n    throw error;\n  }\n};\n\n// .\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\n\nexport const addCustomer = async customerData => {\n  try {\n    const response = await fetch('http://localhost:3000/api/customers/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(customerData)\n    });\n    if (!response.ok) {\n      console.error('API response not OK:', response.status, response.statusText);\n      throw new Error('Failed to add customer');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error adding customer:', error);\n    throw error;\n  }\n};\nexport const editCustomer = async customerData => {\n  try {\n    const response = await fetch('http://localhost:3000/api/customers/update', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(customerData)\n    });\n    if (!response.ok) {\n      console.error('API response not OK:', response.status, response.statusText);\n      throw new Error('Failed to add customer');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error adding customer:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["getCustomerAddressesByClientID","clientID","response","fetch","ok","console","error","status","statusText","Error","json","searchCustomersByFields","name","email","address","url","URL","params","search","URLSearchParams","toString","data","log","addCustomer","customerData","method","headers","body","JSON","stringify","editCustomer"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/api/CustomerAPI.js"],"sourcesContent":["//.\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\r\n\r\nexport const getCustomerAddressesByClientID = async (clientID) => {\r\n    try {\r\n        const response = await fetch(`http://localhost:3000/api/customers/address/${clientID}`);\r\n        if (!response.ok) {\r\n            console.error('API response not OK:', response.status, response.statusText);\r\n            throw new Error('Failed to fetch customer addresses');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error fetching customer addresses:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\nexport const searchCustomersByFields = async (clientID, name, email, address) => {\r\n    const url = new URL('http://localhost:3000/api/customers/search');\r\n    const params = { clientID, name, email, address }; \r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            console.error('API response not OK:', response.status, response.statusText);\r\n            throw new Error('Failed to fetch customers');\r\n        }\r\n        const data = await response.json();\r\n        console.log('Fetched data:', data);\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error fetching customers:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\n// .\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\r\n\r\nexport const addCustomer = async (customerData) => {\r\n    try {\r\n        const response = await fetch('http://localhost:3000/api/customers/add', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(customerData)\r\n        });\r\n        if (!response.ok) {\r\n            console.error('API response not OK:', response.status, response.statusText);\r\n            throw new Error('Failed to add customer');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error adding customer:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const editCustomer = async (customerData) => {\r\n    try {\r\n        const response = await fetch('http://localhost:3000/api/customers/update', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(customerData)\r\n        });\r\n        if (!response.ok) {\r\n            console.error('API response not OK:', response.status, response.statusText);\r\n            throw new Error('Failed to add customer');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error adding customer:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}