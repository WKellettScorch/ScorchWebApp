{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\Documents\\\\Scorch\\\\EnterpriseSites\\\\Scorch\\\\scorch-web-app\\\\frontend\\\\scorch-web-app\\\\src\\\\components\\\\Customers\\\\CustomersView.js\",\n  _s = $RefreshSig$();\n//.\\fronted\\src\\components\\Customers\\CustomersView.js\nimport React, { useState, useEffect } from 'react';\n\n// Import components\nimport Header from './Header/Header';\nimport AddCustomerButton from './Header/AddCustomerButton';\nimport SearchAndFilterSection from './SearchAndFilterSection/SearchAndFilterSection';\nimport ListView from './ListView/ListView';\nimport CustomerListItem from './ListView/CustomerListItem';\nimport DetailsPanel from './DetailsPanel/DetailsPanel';\nimport RelatedJobsButton from './DetailsPanel/RelatedJobsButton';\nimport EditInfoButton from './DetailsPanel/EditInfoButton';\nimport { searchCustomersByFields } from '../../api/CustomerAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomersView = () => {\n  _s();\n  // A state to store all customers\n  const [customers, setCustomers] = useState([]);\n  const [expandedCustomerID, setExpandedCustomerID] = useState(null); // Moved this state up to CustomersView\n\n  // A state to store selected customer details for the details panel\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n  // This would fetch customers from API or any other source.\n  // I've used useEffect for demonstration but you'll integrate it with your actual API calls or data fetching mechanism.\n  useEffect(() => {\n    // Fetch customers from API or any other source\n    // and set the fetched data to 'customers' state\n    // For demonstration, let's assume we fetch the below data\n    const fetchedCustomers = [\n      // example customer data\n    ];\n    setCustomers(fetchedCustomers);\n    setDisplayedCustomers(fetchedCustomers);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customers-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(AddCustomerButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchAndFilterSection, {\n      onSearch: (clientID, name, email, address) => {\n        searchCustomersByFields(clientID, name, email, address).then(fetchedCustomers => {\n          setCustomers(fetchedCustomers);\n          console.log(customers);\n        }).catch(error => {\n          // Handle any errors, such as displaying an error message to the user.\n          console.error(error);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListView, {\n      customers: customers,\n      expandedCustomerID: expandedCustomerID,\n      setExpandedCustomerID: setExpandedCustomerID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomersView, \"2AsXQRr2Wx0ZC6mrkS7F5QkN3g4=\");\n_c = CustomersView;\nexport default CustomersView;\nvar _c;\n$RefreshReg$(_c, \"CustomersView\");","map":{"version":3,"names":["React","useState","useEffect","Header","AddCustomerButton","SearchAndFilterSection","ListView","CustomerListItem","DetailsPanel","RelatedJobsButton","EditInfoButton","searchCustomersByFields","jsxDEV","_jsxDEV","CustomersView","_s","customers","setCustomers","expandedCustomerID","setExpandedCustomerID","selectedCustomer","setSelectedCustomer","fetchedCustomers","setDisplayedCustomers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","clientID","name","email","address","then","console","log","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/components/Customers/CustomersView.js"],"sourcesContent":["//.\\fronted\\src\\components\\Customers\\CustomersView.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// Import components\r\nimport Header from './Header/Header';\r\nimport AddCustomerButton from './Header/AddCustomerButton';\r\nimport SearchAndFilterSection from './SearchAndFilterSection/SearchAndFilterSection';\r\nimport ListView from './ListView/ListView';\r\nimport CustomerListItem from './ListView/CustomerListItem';\r\nimport DetailsPanel from './DetailsPanel/DetailsPanel';\r\nimport RelatedJobsButton from './DetailsPanel/RelatedJobsButton';\r\nimport EditInfoButton from './DetailsPanel/EditInfoButton';\r\nimport { searchCustomersByFields } from '../../api/CustomerAPI';\r\n\r\nconst CustomersView = () => {\r\n    // A state to store all customers\r\n    const [customers, setCustomers] = useState([]);\r\n    \r\n    const [expandedCustomerID, setExpandedCustomerID] = useState(null); // Moved this state up to CustomersView\r\n\r\n    // A state to store selected customer details for the details panel\r\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n\r\n    // This would fetch customers from API or any other source.\r\n    // I've used useEffect for demonstration but you'll integrate it with your actual API calls or data fetching mechanism.\r\n    useEffect(() => {\r\n        // Fetch customers from API or any other source\r\n        // and set the fetched data to 'customers' state\r\n        // For demonstration, let's assume we fetch the below data\r\n        const fetchedCustomers = [\r\n            // example customer data\r\n        ];\r\n        setCustomers(fetchedCustomers);\r\n        setDisplayedCustomers(fetchedCustomers);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"customers-view-container\">\r\n            <Header>\r\n                <AddCustomerButton />\r\n            </Header>\r\n            <SearchAndFilterSection onSearch={(clientID, name, email, address) => {\r\n    searchCustomersByFields(clientID,  name, email, address)\r\n                    .then(fetchedCustomers => {\r\n                        setCustomers(fetchedCustomers);\r\n            console.log(customers);\r\n        })\r\n        .catch(error => {\r\n            // Handle any errors, such as displaying an error message to the user.\r\n            console.error(error);\r\n        });\r\n}} />\r\n            <ListView \r\n                customers={customers}\r\n                expandedCustomerID={expandedCustomerID}\r\n                setExpandedCustomerID={setExpandedCustomerID}\r\n            />\r\n            {/* Removed CustomerListItem mapping from here */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomersView;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AACA,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,iBAAiB,MAAM,4BAA4B;AAC1D,OAAOC,sBAAsB,MAAM,iDAAiD;AACpF,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAOC,iBAAiB,MAAM,kCAAkC;AAChE,OAAOC,cAAc,MAAM,+BAA+B;AAC1D,SAASC,uBAAuB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM,CAACiB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpE;EACA,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACA;EACAC,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACA,MAAMoB,gBAAgB,GAAG;MACrB;IAAA,CACH;IACDL,YAAY,CAACK,gBAAgB,CAAC;IAC9BC,qBAAqB,CAACD,gBAAgB,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA;IAAKW,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACrCZ,OAAA,CAACV,MAAM;MAAAsB,QAAA,eACHZ,OAAA,CAACT,iBAAiB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACThB,OAAA,CAACR,sBAAsB;MAACyB,QAAQ,EAAEA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,KAAK;QAC9EvB,uBAAuB,CAACoB,QAAQ,EAAGC,IAAI,EAAEC,KAAK,EAAEC,OAAO,CAAC,CACvCC,IAAI,CAACb,gBAAgB,IAAI;UACtBL,YAAY,CAACK,gBAAgB,CAAC;UAC1Cc,OAAO,CAACC,GAAG,CAACrB,SAAS,CAAC;QAC1B,CAAC,CAAC,CACDsB,KAAK,CAACC,KAAK,IAAI;UACZ;UACAH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;QACxB,CAAC,CAAC;MACV;IAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACOhB,OAAA,CAACP,QAAQ;MACLU,SAAS,EAAEA,SAAU;MACrBE,kBAAkB,EAAEA,kBAAmB;MACvCC,qBAAqB,EAAEA;IAAsB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd,CAAC;AAAAd,EAAA,CA9CKD,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}