{"ast":null,"code":"//.\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\nexport var getCustomerAddressesByClientID=function getCustomerAddressesByClientID(clientID){return fetch(\"http://localhost:3000/api/customers/address/\".concat(clientID)).then(function(response){if(!response.ok){console.error('API response not OK:',response.status,response.statusText);throw new Error('Failed to fetch customer addresses');}return response.json();}).catch(function(error){console.error('Error fetching customer addresses:',error);throw error;});};export var searchCustomersByFields=function searchCustomersByFields(clientID,name,email,address){var url=new URL('http://localhost:3000/api/customers/search');var params={clientID:clientID,name:name,email:email,address:address};url.search=new URLSearchParams(params).toString();return fetch(url).then(function(response){if(!response.ok){console.error('API response not OK:',response.status,response.statusText);throw new Error('Failed to fetch customers');}return response.json();}).then(function(data){console.log('Fetched data:',data);return data;}).catch(function(error){console.error('Error fetching customers:',error);throw error;});};// .\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\nexport var addCustomer=function addCustomer(customerData){return fetch('http://localhost:3000/api/customers/add',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(customerData)}).then(function(response){if(!response.ok){console.error('API response not OK:',response.status,response.statusText);throw new Error('Failed to add customer');}return response.json();}).catch(function(error){console.error('Error adding customer:',error);throw error;});};","map":{"version":3,"names":["getCustomerAddressesByClientID","clientID","fetch","concat","then","response","ok","console","error","status","statusText","Error","json","catch","searchCustomersByFields","name","email","address","url","URL","params","search","URLSearchParams","toString","data","log","addCustomer","customerData","method","headers","body","JSON","stringify"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/api/CustomerAPI.js"],"sourcesContent":["//.\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\r\n\r\nexport const getCustomerAddressesByClientID = (clientID) => {\r\n    return fetch(`http://localhost:3000/api/customers/address/${clientID}`)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                console.error('API response not OK:', response.status, response.statusText);\r\n                throw new Error('Failed to fetch customer addresses');\r\n            }\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching customer addresses:', error);\r\n            throw error;\r\n        });\r\n}\r\n\r\n\r\nexport const searchCustomersByFields = (clientID, name, email, address) => {\r\n    const url = new URL('http://localhost:3000/api/customers/search');\r\n    const params = { clientID, name, email, address }; \r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    return fetch(url)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                console.error('API response not OK:', response.status, response.statusText);\r\n                throw new Error('Failed to fetch customers');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log('Fetched data:', data);\r\n            return data;\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching customers:', error);\r\n            throw error;\r\n        });\r\n}\r\n\r\n\r\n// .\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\r\n\r\nexport const addCustomer = (customerData) => {\r\n    return fetch('http://localhost:3000/api/customers/add', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(customerData)\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            console.error('API response not OK:', response.status, response.statusText);\r\n            throw new Error('Failed to add customer');\r\n        }\r\n        return response.json();\r\n    })\r\n    .catch(error => {\r\n        console.error('Error adding customer:', error);\r\n        throw error;\r\n    });\r\n}\r\n\r\n"],"mappings":"AAAA;AAEA,MAAO,IAAM,CAAAA,8BAA8B,CAAG,QAAjC,CAAAA,8BAA8BA,CAAIC,QAAQ,CAAK,CACxD,MAAO,CAAAC,KAAK,gDAAAC,MAAA,CAAgDF,QAAQ,CAAE,CAAC,CAClEG,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACd,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CACdC,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAEH,QAAQ,CAACI,MAAM,CAAEJ,QAAQ,CAACK,UAAU,CAAC,CAC3E,KAAM,IAAI,CAAAC,KAAK,CAAC,oCAAoC,CAAC,CACzD,CACA,MAAO,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC1B,CAAC,CAAC,CACDC,KAAK,CAAC,SAAAL,KAAK,CAAI,CACZD,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1D,KAAM,CAAAA,KAAK,CACf,CAAC,CAAC,CACV,CAAC,CAGD,MAAO,IAAM,CAAAM,uBAAuB,CAAG,QAA1B,CAAAA,uBAAuBA,CAAIb,QAAQ,CAAEc,IAAI,CAAEC,KAAK,CAAEC,OAAO,CAAK,CACvE,GAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,GAAG,CAAC,4CAA4C,CAAC,CACjE,GAAM,CAAAC,MAAM,CAAG,CAAEnB,QAAQ,CAARA,QAAQ,CAAEc,IAAI,CAAJA,IAAI,CAAEC,KAAK,CAALA,KAAK,CAAEC,OAAO,CAAPA,OAAQ,CAAC,CACjDC,GAAG,CAACG,MAAM,CAAG,GAAI,CAAAC,eAAe,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC,CAEnD,MAAO,CAAArB,KAAK,CAACgB,GAAG,CAAC,CACZd,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACd,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CACdC,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAEH,QAAQ,CAACI,MAAM,CAAEJ,QAAQ,CAACK,UAAU,CAAC,CAC3E,KAAM,IAAI,CAAAC,KAAK,CAAC,2BAA2B,CAAC,CAChD,CACA,MAAO,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC1B,CAAC,CAAC,CACDR,IAAI,CAAC,SAAAoB,IAAI,CAAI,CACVjB,OAAO,CAACkB,GAAG,CAAC,eAAe,CAAED,IAAI,CAAC,CAClC,MAAO,CAAAA,IAAI,CACf,CAAC,CAAC,CACDX,KAAK,CAAC,SAAAL,KAAK,CAAI,CACZD,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjD,KAAM,CAAAA,KAAK,CACf,CAAC,CAAC,CACV,CAAC,CAGD;AAEA,MAAO,IAAM,CAAAkB,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,YAAY,CAAK,CACzC,MAAO,CAAAzB,KAAK,CAAC,yCAAyC,CAAE,CACpD0B,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,YAAY,CACrC,CAAC,CAAC,CACDvB,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACd,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CACdC,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAEH,QAAQ,CAACI,MAAM,CAAEJ,QAAQ,CAACK,UAAU,CAAC,CAC3E,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC7C,CACA,MAAO,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC1B,CAAC,CAAC,CACDC,KAAK,CAAC,SAAAL,KAAK,CAAI,CACZD,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,KAAM,CAAAA,KAAK,CACf,CAAC,CAAC,CACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}