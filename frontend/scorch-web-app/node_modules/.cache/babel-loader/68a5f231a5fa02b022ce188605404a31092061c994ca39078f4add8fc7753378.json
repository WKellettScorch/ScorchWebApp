{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\Documents\\\\Scorch\\\\EnterpriseSites\\\\Scorch\\\\scorch-web-app\\\\frontend\\\\scorch-web-app\\\\src\\\\components\\\\Customers\\\\Header\\\\EditCustomerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './EditCustomerForm.css';\nimport { editCustomer } from '../../../api/CustomerAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditCustomerForm = ({\n  onClose,\n  customer\n}) => {\n  _s();\n  //const [formData, setFormData] = useState(customer);\n  const [formData, setFormData] = useState(customer);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    formData.CustomerID = customer.CustomerID;\n\n    // Here, you'll make the API call to update the customer data instead of adding a new one.\n    editCustomer(formData).then(response => {\n      alert(response.message); // Show success message\n      onClose();\n    }).catch(error => {\n      alert('Failed to edit customer. Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-customer-form-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"add-customer-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"FirstName\",\n        placeholder: \"First Name\",\n        value: formData.FirstName,\n        onChange: handleInputChange,\n        required: true,\n        pattern: \"[a-zA-Z\\\\s]+\",\n        title: \"Only alphabetic characters are allowed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"LastName\",\n        placeholder: \"Last Name\",\n        value: formData.LastName,\n        onChange: handleInputChange,\n        required: true,\n        pattern: \"[a-zA-Z\\\\s]+\",\n        title: \"Only alphabetic characters are allowed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"Email\",\n        placeholder: \"Email\",\n        value: formData.Email,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Phone\",\n        placeholder: \"Phone Number\",\n        value: formData.Phone,\n        onChange: handleInputChange,\n        required: true,\n        pattern: \"[\\\\(]?(\\\\d{3})[\\\\)]?[\\\\s-]?(\\\\d{3})[\\\\s-]?(\\\\d{4})\",\n        title: \"Please enter a valid phone number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"StreetAddress\",\n        placeholder: \"Street Address\",\n        value: formData.StreetAddress,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"City\",\n        placeholder: \"City\",\n        value: formData.City,\n        onChange: handleInputChange,\n        required: true,\n        pattern: \"[a-zA-Z\\\\s]+\",\n        title: \"Only alphabetic characters are allowed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"State\",\n        placeholder: \"State\",\n        value: formData.State,\n        onChange: handleInputChange,\n        required: true,\n        pattern: \"[a-zA-Z\\\\s]+\",\n        title: \"Only alphabetic characters are allowed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"ZipCode\",\n        placeholder: \"Zip Code\",\n        value: formData.ZipCode,\n        onChange: handleInputChange,\n        required: true,\n        pattern: \"^\\\\d{5}(?:[-\\\\s]\\\\d{4})?$\",\n        title: \"Valid formats: 12345 or 12345-6789\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(EditCustomerForm, \"LncNRJgRYwoApAsV3rLCunONOgI=\");\n_c = EditCustomerForm;\nexport default EditCustomerForm;\nvar _c;\n$RefreshReg$(_c, \"EditCustomerForm\");","map":{"version":3,"names":["React","useState","editCustomer","jsxDEV","_jsxDEV","EditCustomerForm","onClose","customer","_s","formData","setFormData","handleInputChange","event","name","value","target","prevState","handleSubmit","preventDefault","CustomerID","then","response","alert","message","catch","error","className","children","onSubmit","type","placeholder","FirstName","onChange","required","pattern","title","fileName","_jsxFileName","lineNumber","columnNumber","LastName","Email","Phone","StreetAddress","City","State","ZipCode","onClick","_c","$RefreshReg$"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/components/Customers/Header/EditCustomerForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './EditCustomerForm.css';\r\nimport { editCustomer } from '../../../api/CustomerAPI';\r\n\r\nconst EditCustomerForm = ({ onClose, customer }) => {\r\n    //const [formData, setFormData] = useState(customer);\r\n    const [formData, setFormData] = useState(customer);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        formData.CustomerID = customer.CustomerID\r\n    \r\n        // Here, you'll make the API call to update the customer data instead of adding a new one.\r\n        editCustomer(formData)\r\n        .then(response => {\r\n            alert(response.message);  // Show success message\r\n            onClose();\r\n        })\r\n        .catch(error => {\r\n            alert('Failed to edit customer. Please try again.');\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <div className=\"edit-customer-form-overlay\">\r\n            <form onSubmit={handleSubmit} className=\"add-customer-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"FirstName\"\r\n                    placeholder=\"First Name\"\r\n                    value={formData.FirstName}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[a-zA-Z\\s]+\"\r\n                    title=\"Only alphabetic characters are allowed\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"LastName\"\r\n                    placeholder=\"Last Name\"\r\n                    value={formData.LastName}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[a-zA-Z\\s]+\"\r\n                    title=\"Only alphabetic characters are allowed\"\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"Email\"\r\n                    placeholder=\"Email\"\r\n                    value={formData.Email}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"Phone\"\r\n                    placeholder=\"Phone Number\"\r\n                    value={formData.Phone}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[\\(]?(\\d{3})[\\)]?[\\s-]?(\\d{3})[\\s-]?(\\d{4})\"\r\n                    title=\"Please enter a valid phone number\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"StreetAddress\"\r\n                    placeholder=\"Street Address\"\r\n                    value={formData.StreetAddress}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"City\"\r\n                    placeholder=\"City\"\r\n                    value={formData.City}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[a-zA-Z\\s]+\"\r\n                    title=\"Only alphabetic characters are allowed\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"State\"\r\n                    placeholder=\"State\"\r\n                    value={formData.State}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[a-zA-Z\\s]+\"\r\n                    title=\"Only alphabetic characters are allowed\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"ZipCode\"\r\n                    placeholder=\"Zip Code\"\r\n                    value={formData.ZipCode}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"^\\d{5}(?:[-\\s]\\d{4})?$\"\r\n                    title=\"Valid formats: 12345 or 12345-6789\"\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n                <button onClick={onClose}>Close</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditCustomerForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}