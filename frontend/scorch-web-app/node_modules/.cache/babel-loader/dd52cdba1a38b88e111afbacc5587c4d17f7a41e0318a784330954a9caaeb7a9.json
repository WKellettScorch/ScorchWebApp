{"ast":null,"code":"import _slicedToArray from\"C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//.\\fronted\\src\\components\\Customers\\CustomersView.js\nimport React,{useState,useEffect}from'react';// Import components\nimport Header from'./Header/Header';import AddCustomerButton from'./Header/AddCustomerButton';import SearchAndFilterSection from'./SearchAndFilterSection/SearchAndFilterSection';import ListView from'./ListView/ListView';import{searchCustomersByFields}from'../../api/CustomerAPI';import AddCustomerForm from'./Header/AddCustomerForm';import EditCustomerForm from'./Header/EditCustomerForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CustomersView=function CustomersView(){// A state to store all customers\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),customers=_useState2[0],setCustomers=_useState2[1];// A state to store filtered or sorted customers\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),displayedCustomers=_useState4[0],setDisplayedCustomers=_useState4[1];// A state to store selected customer details for the details panel\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),selectedCustomer=_useState6[0],setSelectedCustomer=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showAddForm=_useState8[0],setShowAddForm=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showEditForm=_useState10[0],setShowEditForm=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),editingCustomer=_useState12[0],setEditingCustomer=_useState12[1];// This would fetch customers from API or any other source.\n// I've used useEffect for demonstration but you'll integrate it with your actual API calls or data fetching mechanism.\nuseEffect(function(){// Fetch customers from API or any other source\n// and set the fetched data to 'customers' state\n// For demonstration, let's assume we fetch the below data\nvar fetchedCustomers=[// example customer data\n];setCustomers(fetchedCustomers);setDisplayedCustomers(fetchedCustomers);},[]);var handleSearch=function handleSearch(clientID,name,email,address){searchCustomersByFields(clientID,name,email,address).then(function(searchedCustomers){setDisplayedCustomers(searchedCustomers);}).catch(function(error){console.error(error);});};var handleEditCustomerClick=function handleEditCustomerClick(customer){setEditingCustomer(customer);setShowEditForm(true);};var handleAddCustomerClick=function handleAddCustomerClick(){setShowAddForm(true);};var handleCloseAddForm=function handleCloseAddForm(){setShowAddForm(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"customers-view-container\",children:[/*#__PURE__*/_jsx(Header,{children:/*#__PURE__*/_jsx(AddCustomerButton,{onClick:handleAddCustomerClick})}),showAddForm&&/*#__PURE__*/_jsx(AddCustomerForm,{onClose:handleCloseAddForm}),/*#__PURE__*/_jsx(SearchAndFilterSection,{onSearch:handleSearch}),/*#__PURE__*/_jsx(ListView,{customers:displayedCustomers,setSelectedCustomer:setSelectedCustomer,selectedCustomerId:selectedCustomer?selectedCustomer.CustomerID:null,onEdit:handleEditCustomerClick}),showEditForm&&/*#__PURE__*/_jsx(EditCustomerForm,{onClose:function onClose(){return setShowEditForm(false);},customerData:editingCustomer})]});};export default CustomersView;","map":{"version":3,"names":["React","useState","useEffect","Header","AddCustomerButton","SearchAndFilterSection","ListView","searchCustomersByFields","AddCustomerForm","EditCustomerForm","jsx","_jsx","jsxs","_jsxs","CustomersView","_useState","_useState2","_slicedToArray","customers","setCustomers","_useState3","_useState4","displayedCustomers","setDisplayedCustomers","_useState5","_useState6","selectedCustomer","setSelectedCustomer","_useState7","_useState8","showAddForm","setShowAddForm","_useState9","_useState10","showEditForm","setShowEditForm","_useState11","_useState12","editingCustomer","setEditingCustomer","fetchedCustomers","handleSearch","clientID","name","email","address","then","searchedCustomers","catch","error","console","handleEditCustomerClick","customer","handleAddCustomerClick","handleCloseAddForm","className","children","onClick","onClose","onSearch","selectedCustomerId","CustomerID","onEdit","customerData"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/components/Customers/CustomersView.js"],"sourcesContent":["//.\\fronted\\src\\components\\Customers\\CustomersView.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// Import components\r\nimport Header from './Header/Header';\r\nimport AddCustomerButton from './Header/AddCustomerButton';\r\nimport SearchAndFilterSection from './SearchAndFilterSection/SearchAndFilterSection';\r\nimport ListView from './ListView/ListView';\r\nimport { searchCustomersByFields } from '../../api/CustomerAPI';\r\nimport AddCustomerForm from './Header/AddCustomerForm';\r\n\r\nimport EditCustomerForm from './Header/EditCustomerForm';\r\n\r\nconst CustomersView = () => {\r\n    // A state to store all customers\r\n    const [customers, setCustomers] = useState([]);\r\n    \r\n    // A state to store filtered or sorted customers\r\n    const [displayedCustomers, setDisplayedCustomers] = useState([]);\r\n\r\n    // A state to store selected customer details for the details panel\r\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n    const [editingCustomer, setEditingCustomer] = useState(null);\r\n\r\n    // This would fetch customers from API or any other source.\r\n    // I've used useEffect for demonstration but you'll integrate it with your actual API calls or data fetching mechanism.\r\n    useEffect(() => {\r\n        // Fetch customers from API or any other source\r\n        // and set the fetched data to 'customers' state\r\n        // For demonstration, let's assume we fetch the below data\r\n        const fetchedCustomers = [\r\n            // example customer data\r\n        ];\r\n        setCustomers(fetchedCustomers);\r\n        setDisplayedCustomers(fetchedCustomers);\r\n    }, []);\r\n\r\n    const handleSearch = (clientID, name, email, address) => {\r\n        searchCustomersByFields(clientID, name, email, address)\r\n            .then(searchedCustomers => {\r\n                setDisplayedCustomers(searchedCustomers);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    \r\n        const handleEditCustomerClick = (customer) => {\r\n        setEditingCustomer(customer);\r\n        setShowEditForm(true);\r\n    };\r\n    \r\n    const handleAddCustomerClick = () => {\r\n    setShowAddForm(true);\r\n};\r\n\r\nconst handleCloseAddForm = () => {\r\n    setShowAddForm(false);\r\n};\r\n\r\n    return (\r\n    <div className=\"customers-view-container\">\r\n        <Header>\r\n            <AddCustomerButton onClick={handleAddCustomerClick} />\r\n        </Header>\r\n        {showAddForm && <AddCustomerForm onClose={handleCloseAddForm} />}\r\n\t\r\n        <SearchAndFilterSection onSearch={handleSearch} />\r\n        <ListView \r\n            customers={displayedCustomers} \r\n            setSelectedCustomer={setSelectedCustomer}\r\n            selectedCustomerId={selectedCustomer ? selectedCustomer.CustomerID : null}\r\n\t    onEdit={handleEditCustomerClick}\r\n        />\r\n\t{showEditForm && <EditCustomerForm onClose={() => setShowEditForm(false)} customerData={editingCustomer} />}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomersView;\r\n"],"mappings":"mLAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAElD;AACA,MAAO,CAAAC,MAAM,KAAM,iBAAiB,CACpC,MAAO,CAAAC,iBAAiB,KAAM,4BAA4B,CAC1D,MAAO,CAAAC,sBAAsB,KAAM,iDAAiD,CACpF,MAAO,CAAAC,QAAQ,KAAM,qBAAqB,CAC1C,OAASC,uBAAuB,KAAQ,uBAAuB,CAC/D,MAAO,CAAAC,eAAe,KAAM,0BAA0B,CAEtD,MAAO,CAAAC,gBAAgB,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEzD,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CACxB;AACA,IAAAC,SAAA,CAAkCd,QAAQ,CAAC,EAAE,CAAC,CAAAe,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAvCG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAE9B;AACA,IAAAI,UAAA,CAAoDnB,QAAQ,CAAC,EAAE,CAAC,CAAAoB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAzDE,kBAAkB,CAAAD,UAAA,IAAEE,qBAAqB,CAAAF,UAAA,IAEhD;AACA,IAAAG,UAAA,CAAgDvB,QAAQ,CAAC,IAAI,CAAC,CAAAwB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAvDE,gBAAgB,CAAAD,UAAA,IAAEE,mBAAmB,CAAAF,UAAA,IAC5C,IAAAG,UAAA,CAAsC3B,QAAQ,CAAC,KAAK,CAAC,CAAA4B,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAA9CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAClC,IAAAG,UAAA,CAAwC/B,QAAQ,CAAC,KAAK,CAAC,CAAAgC,WAAA,CAAAhB,cAAA,CAAAe,UAAA,IAAhDE,YAAY,CAAAD,WAAA,IAAEE,eAAe,CAAAF,WAAA,IACpC,IAAAG,WAAA,CAA8CnC,QAAQ,CAAC,IAAI,CAAC,CAAAoC,WAAA,CAAApB,cAAA,CAAAmB,WAAA,IAArDE,eAAe,CAAAD,WAAA,IAAEE,kBAAkB,CAAAF,WAAA,IAE1C;AACA;AACAnC,SAAS,CAAC,UAAM,CACZ;AACA;AACA;AACA,GAAM,CAAAsC,gBAAgB,CAAG,CACrB;AAAA,CACH,CACDrB,YAAY,CAACqB,gBAAgB,CAAC,CAC9BjB,qBAAqB,CAACiB,gBAAgB,CAAC,CAC3C,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,QAAQ,CAAEC,IAAI,CAAEC,KAAK,CAAEC,OAAO,CAAK,CACrDtC,uBAAuB,CAACmC,QAAQ,CAAEC,IAAI,CAAEC,KAAK,CAAEC,OAAO,CAAC,CAClDC,IAAI,CAAC,SAAAC,iBAAiB,CAAI,CACvBxB,qBAAqB,CAACwB,iBAAiB,CAAC,CAC5C,CAAC,CAAC,CACDC,KAAK,CAAC,SAAAC,KAAK,CAAI,CACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACxB,CAAC,CAAC,CACV,CAAC,CAEG,GAAM,CAAAE,uBAAuB,CAAG,QAA1B,CAAAA,uBAAuBA,CAAIC,QAAQ,CAAK,CAC9Cb,kBAAkB,CAACa,QAAQ,CAAC,CAC5BjB,eAAe,CAAC,IAAI,CAAC,CACzB,CAAC,CAED,GAAM,CAAAkB,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAA,CAAS,CACrCtB,cAAc,CAAC,IAAI,CAAC,CACxB,CAAC,CAED,GAAM,CAAAuB,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,CAAS,CAC7BvB,cAAc,CAAC,KAAK,CAAC,CACzB,CAAC,CAEG,mBACAlB,KAAA,QAAK0C,SAAS,CAAC,0BAA0B,CAAAC,QAAA,eACrC7C,IAAA,CAACR,MAAM,EAAAqD,QAAA,cACH7C,IAAA,CAACP,iBAAiB,EAACqD,OAAO,CAAEJ,sBAAuB,CAAE,CAAC,CAClD,CAAC,CACRvB,WAAW,eAAInB,IAAA,CAACH,eAAe,EAACkD,OAAO,CAAEJ,kBAAmB,CAAE,CAAC,cAEhE3C,IAAA,CAACN,sBAAsB,EAACsD,QAAQ,CAAElB,YAAa,CAAE,CAAC,cAClD9B,IAAA,CAACL,QAAQ,EACLY,SAAS,CAAEI,kBAAmB,CAC9BK,mBAAmB,CAAEA,mBAAoB,CACzCiC,kBAAkB,CAAElC,gBAAgB,CAAGA,gBAAgB,CAACmC,UAAU,CAAG,IAAK,CACjFC,MAAM,CAAEX,uBAAwB,CAC5B,CAAC,CACRjB,YAAY,eAAIvB,IAAA,CAACF,gBAAgB,EAACiD,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAvB,eAAe,CAAC,KAAK,CAAC,EAAC,CAAC4B,YAAY,CAAEzB,eAAgB,CAAE,CAAC,EAE/F,CAAC,CAEd,CAAC,CAED,cAAe,CAAAxB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}