{"ast":null,"code":"//.\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\n\nexport const getCustomerAddressesByClientID = clientID => {\n  return fetch(`http://localhost:3000/api/customers/address/${clientID}`).then(response => {\n    if (!response.ok) {\n      console.error('API response not OK:', response.status, response.statusText);\n      throw new Error('Failed to fetch customer addresses');\n    }\n    return response.json();\n  }).then(data => {\n    console.log('Fetched data:', data);\n    return data;\n  }).catch(error => {\n    console.error('Error fetching customer addresses:', error);\n    throw error;\n  });\n};\nexport const searchCustomersByFields = (clientID, name, email, address) => {\n  const url = new URL('http://localhost:3000/api/customers/search');\n  const params = {\n    clientID,\n    name,\n    email,\n    address\n  };\n  url.search = new URLSearchParams(params).toString();\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      console.error('API response not OK:', response.status, response.statusText);\n      throw new Error('Failed to fetch customers');\n    }\n    return response.json();\n  }).then(data => {\n    console.log('Fetched data:', data);\n    return data;\n  }).catch(error => {\n    console.error('Error fetching customers:', error);\n    throw error;\n  });\n};","map":{"version":3,"names":["getCustomerAddressesByClientID","clientID","fetch","then","response","ok","console","error","status","statusText","Error","json","data","log","catch","searchCustomersByFields","name","email","address","url","URL","params","search","URLSearchParams","toString"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/api/CustomerAPI.js"],"sourcesContent":["//.\\frontend\\scorch-web-app\\src\\api\\CustomerAPI.js\r\n\r\nexport const getCustomerAddressesByClientID = (clientID) => {\r\n    return fetch(`http://localhost:3000/api/customers/address/${clientID}`)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                console.error('API response not OK:', response.status, response.statusText);\r\n                throw new Error('Failed to fetch customer addresses');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log('Fetched data:', data);\r\n            return data;\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching customer addresses:', error);\r\n            throw error;\r\n        });\r\n}\r\n\r\n\r\nexport const searchCustomersByFields = (clientID, name, email, address) => {\r\n    const url = new URL('http://localhost:3000/api/customers/search');\r\n    const params = { clientID, name, email, address }; \r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    return fetch(url)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                console.error('API response not OK:', response.status, response.statusText);\r\n                throw new Error('Failed to fetch customers');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log('Fetched data:', data);\r\n            return data;\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching customers:', error);\r\n            throw error;\r\n        });\r\n}\r\n\r\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,8BAA8B,GAAIC,QAAQ,IAAK;EACxD,OAAOC,KAAK,CAAE,+CAA8CD,QAAS,EAAC,CAAC,CAClEE,IAAI,CAACC,QAAQ,IAAI;IACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACdC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEH,QAAQ,CAACI,MAAM,EAAEJ,QAAQ,CAACK,UAAU,CAAC;MAC3E,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;IACzD;IACA,OAAON,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,CACDR,IAAI,CAACS,IAAI,IAAI;IACVN,OAAO,CAACO,GAAG,CAAC,eAAe,EAAED,IAAI,CAAC;IAClC,OAAOA,IAAI;EACf,CAAC,CAAC,CACDE,KAAK,CAACP,KAAK,IAAI;IACZD,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACf,CAAC,CAAC;AACV,CAAC;AAGD,OAAO,MAAMQ,uBAAuB,GAAGA,CAACd,QAAQ,EAAEe,IAAI,EAAEC,KAAK,EAAEC,OAAO,KAAK;EACvE,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,4CAA4C,CAAC;EACjE,MAAMC,MAAM,GAAG;IAAEpB,QAAQ;IAAEe,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC;EACjDC,GAAG,CAACG,MAAM,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC;EAEnD,OAAOtB,KAAK,CAACiB,GAAG,CAAC,CACZhB,IAAI,CAACC,QAAQ,IAAI;IACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACdC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEH,QAAQ,CAACI,MAAM,EAAEJ,QAAQ,CAACK,UAAU,CAAC;MAC3E,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAChD;IACA,OAAON,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,CACDR,IAAI,CAACS,IAAI,IAAI;IACVN,OAAO,CAACO,GAAG,CAAC,eAAe,EAAED,IAAI,CAAC;IAClC,OAAOA,IAAI;EACf,CAAC,CAAC,CACDE,KAAK,CAACP,KAAK,IAAI;IACZD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACf,CAAC,CAAC;AACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}