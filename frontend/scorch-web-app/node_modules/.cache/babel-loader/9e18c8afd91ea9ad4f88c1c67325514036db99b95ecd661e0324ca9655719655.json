{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\Documents\\\\Scorch\\\\EnterpriseSites\\\\Scorch\\\\scorch-web-app\\\\frontend\\\\scorch-web-app\\\\src\\\\components\\\\Customers\\\\ListView\\\\ListView.js\",\n  _s = $RefreshSig$();\n// ./frontend/src/components/Customers/ListView/ListView.js\nimport React, { useState, useEffect } from 'react';\nimport CustomerListItem from './CustomerListItem';\nimport './ListView.css';\nimport { getCustomerAddressesByClientID } from '../../../api/CustomerAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListView = ({\n  customers: externalCustomers,\n  setSelectedCustomer,\n  selectedCustomerId\n}) => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expandedCustomerID, setExpandedCustomerID] = useState(null);\n  useEffect(() => {\n    // Using ClientID 1 for testing. REMINDER: Make dynamic later.\n    // Only fetch if there's no external data provided\n    if (externalCustomers.length === 0) {\n      getCustomerAddressesByClientID(1).then(data => {\n        setCustomers(data);\n        setLoading(false);\n      }).catch(err => {\n        setError(err.message);\n        setLoading(false);\n      });\n    } else {\n      setCustomers(externalCustomers);\n      setLoading(false);\n    }\n  }, [externalCustomers]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customer-list\",\n    children: customers.map(customer => /*#__PURE__*/_jsxDEV(CustomerListItem, {\n      customer: customer,\n      isExpanded: customer.CustomerID === selectedCustomerId,\n      onToggle: () => setSelectedCustomer(customer)\n    }, customer.CustomerID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ListView, \"cebjfsx2qPaOebIorevfdyf/Ie0=\");\n_c = ListView;\nexport default ListView;\nvar _c;\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"names":["React","useState","useEffect","CustomerListItem","getCustomerAddressesByClientID","jsxDEV","_jsxDEV","ListView","customers","externalCustomers","setSelectedCustomer","selectedCustomerId","_s","setCustomers","loading","setLoading","error","setError","expandedCustomerID","setExpandedCustomerID","length","then","data","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","customer","isExpanded","CustomerID","onToggle","_c","$RefreshReg$"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/components/Customers/ListView/ListView.js"],"sourcesContent":["// ./frontend/src/components/Customers/ListView/ListView.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport CustomerListItem from './CustomerListItem';\r\nimport './ListView.css';\r\nimport { getCustomerAddressesByClientID } from '../../../api/CustomerAPI';\r\n\r\nconst ListView = ({ customers: externalCustomers, setSelectedCustomer, selectedCustomerId }) => {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [loading, setLoading] = useState(true); \r\n    const [error, setError] = useState(null);\r\n    const [expandedCustomerID, setExpandedCustomerID] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Using ClientID 1 for testing. REMINDER: Make dynamic later.\r\n        // Only fetch if there's no external data provided\r\n        if (externalCustomers.length === 0) {\r\n            getCustomerAddressesByClientID(1)\r\n                .then(data => {\r\n                    setCustomers(data);\r\n                    setLoading(false);\r\n                })\r\n                .catch(err => {\r\n                    setError(err.message);\r\n                    setLoading(false);\r\n                });\r\n        } else {\r\n            setCustomers(externalCustomers);\r\n            setLoading(false);\r\n        }\r\n    }, [externalCustomers]);\r\n\r\n    if (loading) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p>Error: {error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"customer-list\">\r\n            {customers.map(customer => \r\n                <CustomerListItem \r\n                    key={customer.CustomerID} \r\n                    customer={customer} \r\n                    isExpanded={customer.CustomerID === selectedCustomerId}\r\n                    onToggle={() => setSelectedCustomer(customer)} \r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListView;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,gBAAgB;AACvB,SAASC,8BAA8B,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,SAAS,EAAEC,iBAAiB;EAAEC,mBAAmB;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EAC5F,MAAM,CAACJ,SAAS,EAAEK,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACiB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAElEC,SAAS,CAAC,MAAM;IACZ;IACA;IACA,IAAIO,iBAAiB,CAACW,MAAM,KAAK,CAAC,EAAE;MAChChB,8BAA8B,CAAC,CAAC,CAAC,CAC5BiB,IAAI,CAACC,IAAI,IAAI;QACVT,YAAY,CAACS,IAAI,CAAC;QAClBP,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,CACDQ,KAAK,CAACC,GAAG,IAAI;QACVP,QAAQ,CAACO,GAAG,CAACC,OAAO,CAAC;QACrBV,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;IACV,CAAC,MAAM;MACHF,YAAY,CAACJ,iBAAiB,CAAC;MAC/BM,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACN,iBAAiB,CAAC,CAAC;EAEvB,IAAIK,OAAO,EAAE;IACT,oBAAOR,OAAA;MAAAoB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5B;EAEA,IAAId,KAAK,EAAE;IACP,oBAAOV,OAAA;MAAAoB,QAAA,GAAG,SAAO,EAACV,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;EAEA,oBACIxB,OAAA;IAAKyB,SAAS,EAAC,eAAe;IAAAL,QAAA,EACzBlB,SAAS,CAACwB,GAAG,CAACC,QAAQ,iBACnB3B,OAAA,CAACH,gBAAgB;MAEb8B,QAAQ,EAAEA,QAAS;MACnBC,UAAU,EAAED,QAAQ,CAACE,UAAU,KAAKxB,kBAAmB;MACvDyB,QAAQ,EAAEA,CAAA,KAAM1B,mBAAmB,CAACuB,QAAQ;IAAE,GAHzCA,QAAQ,CAACE,UAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAI3B,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAAlB,EAAA,CA7CKL,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}