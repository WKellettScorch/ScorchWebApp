{"ast":null,"code":"import _slicedToArray from\"C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// ./frontend/src/components/Customers/ListView/ListView.js\nimport React,{useState,useEffect}from'react';import CustomerListItem from'./CustomerListItem';import'./ListView.css';import{getCustomerAddressesByClientID}from'../../../api/CustomerAPI';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ListView=function ListView(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),customers=_useState2[0],setCustomers=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];// Loading state\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];// Error state\nuseEffect(function(){// Using ClientID 1 for testing. REMINDER: Make dynamic later.\ngetCustomerAddressesByClientID(1).then(function(data){setCustomers(data);setLoading(false);// Set loading to false once data is fetched\n}).catch(function(err){setError(err.message);setLoading(false);// Set loading to false even in case of error\n});},[]);if(loading){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});}if(error){return/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]});}return/*#__PURE__*/_jsx(\"div\",{className:\"customer-list\",children:customers.map(function(customer){return/*#__PURE__*/_jsx(CustomerListItem,{customer:customer},customer.CustomerID);})});};export default ListView;","map":{"version":3,"names":["React","useState","useEffect","CustomerListItem","getCustomerAddressesByClientID","jsx","_jsx","jsxs","_jsxs","ListView","_useState","_useState2","_slicedToArray","customers","setCustomers","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","then","data","catch","err","message","children","className","map","customer","CustomerID"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/components/Customers/ListView/ListView.js"],"sourcesContent":["// ./frontend/src/components/Customers/ListView/ListView.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport CustomerListItem from './CustomerListItem';\r\nimport './ListView.css';\r\nimport { getCustomerAddressesByClientID } from '../../../api/CustomerAPI'; \r\n\r\nconst ListView = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n    const [error, setError] = useState(null);    // Error state\r\n\r\n    useEffect(() => {\r\n        // Using ClientID 1 for testing. REMINDER: Make dynamic later.\r\n        getCustomerAddressesByClientID(1)\r\n            .then(data => {\r\n                setCustomers(data);\r\n                setLoading(false);  // Set loading to false once data is fetched\r\n            })\r\n            .catch(err => {\r\n                setError(err.message);\r\n                setLoading(false);  // Set loading to false even in case of error\r\n            });\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p>Error: {error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"customer-list\">\r\n            {customers.map(customer => <CustomerListItem key={customer.CustomerID} customer={customer} />)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListView;\r\n"],"mappings":"mLAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,gBAAgB,KAAM,oBAAoB,CACjD,MAAO,gBAAgB,CACvB,OAASC,8BAA8B,KAAQ,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1E,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CACnB,IAAAC,SAAA,CAAkCT,QAAQ,CAAC,EAAE,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAvCG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAC9B,IAAAI,UAAA,CAA8Bd,QAAQ,CAAC,IAAI,CAAC,CAAAe,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAArCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAAoB;AAC9C,IAAAG,UAAA,CAA0BlB,QAAQ,CAAC,IAAI,CAAC,CAAAmB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAjCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAAuB;AAE7ClB,SAAS,CAAC,UAAM,CACZ;AACAE,8BAA8B,CAAC,CAAC,CAAC,CAC5BmB,IAAI,CAAC,SAAAC,IAAI,CAAI,CACVV,YAAY,CAACU,IAAI,CAAC,CAClBN,UAAU,CAAC,KAAK,CAAC,CAAG;AACxB,CAAC,CAAC,CACDO,KAAK,CAAC,SAAAC,GAAG,CAAI,CACVJ,QAAQ,CAACI,GAAG,CAACC,OAAO,CAAC,CACrBT,UAAU,CAAC,KAAK,CAAC,CAAG;AACxB,CAAC,CAAC,CACV,CAAC,CAAE,EAAE,CAAC,CAEN,GAAID,OAAO,CAAE,CACT,mBAAOX,IAAA,MAAAsB,QAAA,CAAG,YAAU,CAAG,CAAC,CAC5B,CAEA,GAAIP,KAAK,CAAE,CACP,mBAAOb,KAAA,MAAAoB,QAAA,EAAG,SAAO,CAACP,KAAK,EAAI,CAAC,CAChC,CAEA,mBACIf,IAAA,QAAKuB,SAAS,CAAC,eAAe,CAAAD,QAAA,CACzBf,SAAS,CAACiB,GAAG,CAAC,SAAAC,QAAQ,qBAAIzB,IAAA,CAACH,gBAAgB,EAA2B4B,QAAQ,CAAEA,QAAS,EAAxCA,QAAQ,CAACC,UAAiC,CAAC,GAAC,CAC7F,CAAC,CAEd,CAAC,CAED,cAAe,CAAAvB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}