{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\Documents\\\\Scorch\\\\EnterpriseSites\\\\Scorch\\\\scorch-web-app\\\\frontend\\\\scorch-web-app\\\\src\\\\components\\\\Customers\\\\Header\\\\AddCustomerForm.js\",\n  _s = $RefreshSig$();\n// ./frontend/src/components/Customers/Header/AddCustomerForm.js\n\nimport React, { useState } from 'react';\nimport './AddCustomerForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCustomerForm = ({\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    StreetAddress: '',\n    City: '',\n    State: '',\n    ZipCode: '',\n    GeoCoordinates: '',\n    FirstName: '',\n    LastName: '',\n    Email: '',\n    Phone: ''\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Here you can make the API call to submit the form data\n    // After submission, close the form\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-customer-form-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"add-customer-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"FirstName\",\n        placeholder: \"First Name\",\n        value: formData.FirstName,\n        onChange: handleInputChange,\n        required: true,\n        pattern: \"[a-zA-Z\\\\s]+\",\n        title: \"Only alphabetic characters are allowed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"LastName\",\n        placeholder: \"Last Name\",\n        value: formData.LastName,\n        onChange: handleInputChange,\n        required: true,\n        pattern: \"[a-zA-Z\\\\s]+\",\n        title: \"Only alphabetic characters are allowed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"Email\",\n        placeholder: \"Email\",\n        value: formData.Email,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Phone\",\n        placeholder: \"Phone Number\",\n        value: formData.Phone,\n        onChange: handleInputChange,\n        required: true,\n        pattern: \"[\\\\(]?(\\\\d{3})[\\\\)]?[\\\\s-]?(\\\\d{3})[\\\\s-]?(\\\\d{4})\",\n        title: \"Please enter a valid phone number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"StreetAddress\",\n        placeholder: \"Street Address\",\n        value: formData.StreetAddress,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"City\",\n        placeholder: \"City\",\n        value: formData.City,\n        onChange: handleInputChange,\n        required: true,\n        pattern: \"[a-zA-Z\\\\s]+\",\n        title: \"Only alphabetic characters are allowed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"State\",\n        placeholder: \"State\",\n        value: formData.State,\n        onChange: handleInputChange,\n        required: true,\n        pattern: \"[a-zA-Z\\\\s]+\",\n        title: \"Only alphabetic characters are allowed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"ZipCode\",\n        placeholder: \"Zip Code\",\n        value: formData.ZipCode,\n        onChange: handleInputChange,\n        required: true,\n        pattern: \"^\\\\d{5}(?:[-\\\\s]\\\\d{4})?$\",\n        title: \"Valid formats: 12345 or 12345-6789\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AddCustomerForm, \"kligEXDNe0CTe5uYBk0yGbnWz/4=\");\n_c = AddCustomerForm;\nexport default AddCustomerForm;\nvar _c;\n$RefreshReg$(_c, \"AddCustomerForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddCustomerForm","onClose","_s","formData","setFormData","StreetAddress","City","State","ZipCode","GeoCoordinates","FirstName","LastName","Email","Phone","handleInputChange","event","name","value","target","prevState","handleSubmit","preventDefault","className","children","onSubmit","type","placeholder","onChange","required","pattern","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/components/Customers/Header/AddCustomerForm.js"],"sourcesContent":["// ./frontend/src/components/Customers/Header/AddCustomerForm.js\r\n\r\nimport React, { useState } from 'react';\r\nimport './AddCustomerForm.css';\r\n\r\n\r\nconst AddCustomerForm = ({ onClose }) => {\r\n    const [formData, setFormData] = useState({\r\n        StreetAddress: '',\r\n        City: '',\r\n        State: '',\r\n        ZipCode: '',\r\n        GeoCoordinates: '',\r\n        FirstName: '',\r\n        LastName: '',\r\n        Email: '',\r\n        Phone: ''\r\n    });\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // Here you can make the API call to submit the form data\r\n        // After submission, close the form\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <div className=\"add-customer-form-overlay\">\r\n            <form onSubmit={handleSubmit} className=\"add-customer-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"FirstName\"\r\n                    placeholder=\"First Name\"\r\n                    value={formData.FirstName}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[a-zA-Z\\s]+\"\r\n                    title=\"Only alphabetic characters are allowed\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"LastName\"\r\n                    placeholder=\"Last Name\"\r\n                    value={formData.LastName}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[a-zA-Z\\s]+\"\r\n                    title=\"Only alphabetic characters are allowed\"\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"Email\"\r\n                    placeholder=\"Email\"\r\n                    value={formData.Email}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"Phone\"\r\n                    placeholder=\"Phone Number\"\r\n                    value={formData.Phone}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[\\(]?(\\d{3})[\\)]?[\\s-]?(\\d{3})[\\s-]?(\\d{4})\"\r\n                    title=\"Please enter a valid phone number\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"StreetAddress\"\r\n                    placeholder=\"Street Address\"\r\n                    value={formData.StreetAddress}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"City\"\r\n                    placeholder=\"City\"\r\n                    value={formData.City}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[a-zA-Z\\s]+\"\r\n                    title=\"Only alphabetic characters are allowed\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"State\"\r\n                    placeholder=\"State\"\r\n                    value={formData.State}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"[a-zA-Z\\s]+\"\r\n                    title=\"Only alphabetic characters are allowed\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"ZipCode\"\r\n                    placeholder=\"Zip Code\"\r\n                    value={formData.ZipCode}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    pattern=\"^\\d{5}(?:[-\\s]\\d{4})?$\"\r\n                    title=\"Valid formats: 12345 or 12345-6789\"\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n                <button onClick={onClose}>Close</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddCustomerForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}