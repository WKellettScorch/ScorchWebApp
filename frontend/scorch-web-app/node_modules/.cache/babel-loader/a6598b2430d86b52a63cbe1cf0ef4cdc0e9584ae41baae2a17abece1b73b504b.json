{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\Documents\\\\Scorch\\\\EnterpriseSites\\\\Scorch\\\\scorch-web-app\\\\frontend\\\\scorch-web-app\\\\src\\\\components\\\\Customers\\\\CustomersView.js\",\n  _s = $RefreshSig$();\n//.\\fronted\\src\\components\\Customers\\CustomersView.js\nimport React, { useState, useEffect } from 'react';\n\n// Import components\nimport Header from './Header/Header';\nimport AddCustomerButton from './Header/AddCustomerButton';\nimport SearchAndFilterSection from './SearchAndFilterSection/SearchAndFilterSection';\nimport ListView from './ListView/ListView';\nimport { searchCustomersByFields } from '../../api/CustomerAPI';\nimport AddCustomerForm from './Header/AddCustomerForm';\nimport EditCustomerForm from './Header/EditCustomerForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomersView = () => {\n  _s();\n  // A state to store all customers\n  const [customers, setCustomers] = useState([]);\n\n  // A state to store filtered or sorted customers\n  const [displayedCustomers, setDisplayedCustomers] = useState([]);\n\n  // A state to store selected customer details for the details panel\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [editingCustomer, setEditingCustomer] = useState(null);\n\n  // This would fetch customers from API or any other source.\n  // I've used useEffect for demonstration but you'll integrate it with your actual API calls or data fetching mechanism.\n  useEffect(() => {\n    // Fetch customers from API or any other source\n    // and set the fetched data to 'customers' state\n    // For demonstration, let's assume we fetch the below data\n    const fetchedCustomers = [\n      // example customer data\n    ];\n    setCustomers(fetchedCustomers);\n    setDisplayedCustomers(fetchedCustomers);\n  }, []);\n  const handleSearch = (clientID, name, email, address) => {\n    searchCustomersByFields(clientID, name, email, address).then(searchedCustomers => {\n      setDisplayedCustomers(searchedCustomers);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleEditCustomerClick = customer => {\n    console.log(\"Edit button clicked in CustomersView\");\n    setEditingCustomer(customer);\n    setShowEditForm(true);\n  };\n  const handleAddCustomerClick = () => {\n    setShowAddForm(true);\n  };\n  const handleCloseAddForm = () => {\n    setShowAddForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customers-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(AddCustomerButton, {\n        onClick: handleAddCustomerClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(AddCustomerForm, {\n      onClose: handleCloseAddForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(SearchAndFilterSection, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListView, {\n      customers: displayedCustomers,\n      setSelectedCustomer: setSelectedCustomer,\n      selectedCustomerId: selectedCustomer ? selectedCustomer.CustomerID : null,\n      onEdit: handleEditCustomerClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), showEditForm && /*#__PURE__*/_jsxDEV(EditCustomerForm, {\n      onClose: () => setShowEditForm(false),\n      customer: editingCustomer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomersView, \"JRDlz22OpaM1sYXGxkEigHfNrjo=\");\n_c = CustomersView;\nexport default CustomersView;\nvar _c;\n$RefreshReg$(_c, \"CustomersView\");","map":{"version":3,"names":["React","useState","useEffect","Header","AddCustomerButton","SearchAndFilterSection","ListView","searchCustomersByFields","AddCustomerForm","EditCustomerForm","jsxDEV","_jsxDEV","CustomersView","_s","customers","setCustomers","displayedCustomers","setDisplayedCustomers","selectedCustomer","setSelectedCustomer","showAddForm","setShowAddForm","showEditForm","setShowEditForm","editingCustomer","setEditingCustomer","fetchedCustomers","handleSearch","clientID","name","email","address","then","searchedCustomers","catch","error","console","handleEditCustomerClick","customer","log","handleAddCustomerClick","handleCloseAddForm","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onSearch","selectedCustomerId","CustomerID","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/wesle/Documents/Scorch/EnterpriseSites/Scorch/scorch-web-app/frontend/scorch-web-app/src/components/Customers/CustomersView.js"],"sourcesContent":["//.\\fronted\\src\\components\\Customers\\CustomersView.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// Import components\r\nimport Header from './Header/Header';\r\nimport AddCustomerButton from './Header/AddCustomerButton';\r\nimport SearchAndFilterSection from './SearchAndFilterSection/SearchAndFilterSection';\r\nimport ListView from './ListView/ListView';\r\nimport { searchCustomersByFields } from '../../api/CustomerAPI';\r\nimport AddCustomerForm from './Header/AddCustomerForm';\r\n\r\nimport EditCustomerForm from './Header/EditCustomerForm';\r\n\r\nconst CustomersView = () => {\r\n    // A state to store all customers\r\n    const [customers, setCustomers] = useState([]);\r\n    \r\n    // A state to store filtered or sorted customers\r\n    const [displayedCustomers, setDisplayedCustomers] = useState([]);\r\n\r\n    // A state to store selected customer details for the details panel\r\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n    const [showAddForm, setShowAddForm] = useState(false);\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n    const [editingCustomer, setEditingCustomer] = useState(null);\r\n\r\n    // This would fetch customers from API or any other source.\r\n    // I've used useEffect for demonstration but you'll integrate it with your actual API calls or data fetching mechanism.\r\n    useEffect(() => {\r\n        // Fetch customers from API or any other source\r\n        // and set the fetched data to 'customers' state\r\n        // For demonstration, let's assume we fetch the below data\r\n        const fetchedCustomers = [\r\n            // example customer data\r\n        ];\r\n        setCustomers(fetchedCustomers);\r\n        setDisplayedCustomers(fetchedCustomers);\r\n    }, []);\r\n\r\n    const handleSearch = (clientID, name, email, address) => {\r\n        searchCustomersByFields(clientID, name, email, address)\r\n            .then(searchedCustomers => {\r\n                setDisplayedCustomers(searchedCustomers);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    \r\n        const handleEditCustomerClick = (customer) => {\r\n            console.log(\"Edit button clicked in CustomersView\");\r\n        setEditingCustomer(customer);\r\n        setShowEditForm(true);\r\n\r\n\r\n    };\r\n    \r\n    const handleAddCustomerClick = () => {\r\n    setShowAddForm(true);\r\n};\r\n\r\nconst handleCloseAddForm = () => {\r\n    setShowAddForm(false);\r\n};\r\n\r\n    return (\r\n    <div className=\"customers-view-container\">\r\n        <Header>\r\n            <AddCustomerButton onClick={handleAddCustomerClick} />\r\n        </Header>\r\n        {showAddForm && <AddCustomerForm onClose={handleCloseAddForm} />}\r\n\t\r\n        <SearchAndFilterSection onSearch={handleSearch} />\r\n        <ListView \r\n            customers={displayedCustomers} \r\n            setSelectedCustomer={setSelectedCustomer}\r\n            selectedCustomerId={selectedCustomer ? selectedCustomer.CustomerID : null}\r\n\t    onEdit={handleEditCustomerClick}\r\n        />\r\n\t{showEditForm && <EditCustomerForm onClose={() => setShowEditForm(false)} customer={editingCustomer} />}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomersView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}